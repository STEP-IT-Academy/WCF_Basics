//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp_PatientClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/PatientsService.Models")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/PatientsService.Models")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IPatientWriter", CallbackContract=typeof(WindowsFormsApp_PatientClient.ServiceReference.IPatientWriterCallback))]
    public interface IPatientWriter {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPatientWriter/AddPatient")]
        void AddPatient(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPatientWriter/AddPatient")]
        System.Threading.Tasks.Task AddPatientAsync(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientWriterCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientWriter/GetAllDoctorPatients", ReplyAction="http://tempuri.org/IPatientWriter/GetAllDoctorPatientsResponse")]
        void GetAllDoctorPatients(string doctorSurname, System.Collections.Generic.List<WindowsFormsApp_PatientClient.ServiceReference.Patient> patients);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientWriterChannel : WindowsFormsApp_PatientClient.ServiceReference.IPatientWriter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientWriterClient : System.ServiceModel.DuplexClientBase<WindowsFormsApp_PatientClient.ServiceReference.IPatientWriter>, WindowsFormsApp_PatientClient.ServiceReference.IPatientWriter {
        
        public PatientWriterClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PatientWriterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PatientWriterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PatientWriterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PatientWriterClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddPatient(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient) {
            base.Channel.AddPatient(doctor, patient);
        }
        
        public System.Threading.Tasks.Task AddPatientAsync(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient) {
            return base.Channel.AddPatientAsync(doctor, patient);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDoctorsReader")]
    public interface IDoctorsReader {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorsReader/ReadAllDoctorNames", ReplyAction="http://tempuri.org/IDoctorsReader/ReadAllDoctorNamesResponse")]
        System.Collections.Generic.List<string> ReadAllDoctorNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorsReader/ReadAllDoctorNames", ReplyAction="http://tempuri.org/IDoctorsReader/ReadAllDoctorNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ReadAllDoctorNamesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoctorsReaderChannel : WindowsFormsApp_PatientClient.ServiceReference.IDoctorsReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoctorsReaderClient : System.ServiceModel.ClientBase<WindowsFormsApp_PatientClient.ServiceReference.IDoctorsReader>, WindowsFormsApp_PatientClient.ServiceReference.IDoctorsReader {
        
        public DoctorsReaderClient() {
        }
        
        public DoctorsReaderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DoctorsReaderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorsReaderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorsReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> ReadAllDoctorNames() {
            return base.Channel.ReadAllDoctorNames();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ReadAllDoctorNamesAsync() {
            return base.Channel.ReadAllDoctorNamesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IPatientDetermining")]
    public interface IPatientDetermining {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientDetermining/IsAlreadyRecorded", ReplyAction="http://tempuri.org/IPatientDetermining/IsAlreadyRecordedResponse")]
        bool IsAlreadyRecorded(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientDetermining/IsAlreadyRecorded", ReplyAction="http://tempuri.org/IPatientDetermining/IsAlreadyRecordedResponse")]
        System.Threading.Tasks.Task<bool> IsAlreadyRecordedAsync(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientDeterminingChannel : WindowsFormsApp_PatientClient.ServiceReference.IPatientDetermining, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientDeterminingClient : System.ServiceModel.ClientBase<WindowsFormsApp_PatientClient.ServiceReference.IPatientDetermining>, WindowsFormsApp_PatientClient.ServiceReference.IPatientDetermining {
        
        public PatientDeterminingClient() {
        }
        
        public PatientDeterminingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientDeterminingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientDeterminingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientDeterminingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlreadyRecorded(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient) {
            return base.Channel.IsAlreadyRecorded(doctor, patient);
        }
        
        public System.Threading.Tasks.Task<bool> IsAlreadyRecordedAsync(WindowsFormsApp_PatientClient.ServiceReference.Doctor doctor, WindowsFormsApp_PatientClient.ServiceReference.Patient patient) {
            return base.Channel.IsAlreadyRecordedAsync(doctor, patient);
        }
    }
}
